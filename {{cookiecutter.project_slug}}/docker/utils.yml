version: '3.8'

x-image: &image {{ cookiecutter.project_slug }}:dev
x-image-base: &image-base {{ cookiecutter.project_slug }}:base
x-volumes: &volumes
  - ../config/settings.yaml:/home/app/config/settings.yaml
  - ../src:/home/app/libs
  # Docker-Compose settings
  - ./config/.secrets.yaml:/home/app/config/.secrets.yaml
  - ./config/override.yaml:/home/app/config/override.yaml

services:
  # 1. Database
  storage:
    image: postgres:15
    env_file:
      - backend.env
    command: postgres -c 'max_connections=400'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U service" ]
      interval: 1s
      timeout: 1s
      retries: 30

  # Make Migration
  makemigrations:
    depends_on:
      storage:
        condition: service_healthy
    image: *image
    volumes: *volumes
    env_file:
      - backend.env
      - ../.env
    entrypoint: python manage.py makemigrations
    command: --no-input

  # Add dependencies
  poetry:
    image: *image-base
    volumes:
      - ../:/home/app/
    working_dir: /home/app/
    entrypoint: poetry

  # Lock Dependencies
  poetry-export:
    image: *image-base
    volumes:
      - ../:/home/app/
    working_dir: /home/app/
    command: >
      bash -c "pip install poetry-plugin-export
      && poetry lock --no-update
      && poetry export --without-hashes -f requirements.txt -o requirements.txt
      && poetry export --without-hashes -f requirements.txt -o requirements.dev.txt --with dev"
