[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
Django = "^4.2.2"
dynaconf = "^3.1.12"
sentry-sdk = "^1.25.1"
psycopg2 = "^2.9.6"
gunicorn = "^20.1.0"
whitenoise = "^6.4.0"
djangoheads = "^1.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.2"
pre-commit = "^3.3.2"
pytest-sugar = "^0.9.7"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.1.0"
pytest-django = "^4.7.0"
poetry-plugin-export = "^1.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    ".venv/*",
    "*.pyc",
    ".mypy_cache",
    ".pytest_cache",
    "setup.py",
]
line-length = 120
indent-width = 4
force-exclude = true
show-fixes = true
show-source = true
target-version = "py38"

[tool.ruff.lint]
select = ["I", "ANN", "D", "F", "E", "W", "N", "C90", "PL", "T20", "SLF", "SIM", "TID", "TCH", "PERF", "FURB"]
ignore = ["D100", "D104", "D107", "D401", "F403", "N805", "ANN101", "ANN102", "ANN401", "PLR"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "(?x)(^venv/ | ^venv\\.py$)"

[tool.ruff.format]
line-ending = "auto"
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 40

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]
